{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","title","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAChB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAW,SAAAR,GAGpB,OAFAS,QAAQC,IAAIV,GAEL,qBAAKC,UAAU,YAAf,SAECD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCRrBQ,GCFE,I,YDEU,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MEqDHG,E,kDAnDb,aAAc,IAAD,8BACX,gBAqBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QACtC,EAAKH,SAAS,CAAEI,MAAOL,EAAEG,OAAOC,SArBhC,EAAKE,MAAQ,CACXd,SAAU,GACVU,YAAY,GACZG,MAAM,IANG,E,qDAYb,WAAqB,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAET,SAAUmB,S,oBAY3C,WAAS,IAAD,EACmCC,KAAKN,MAAtCd,EADF,EACEA,SAAUU,EADZ,EACYA,YAAaG,EADzB,EACyBA,MACzBQ,EAAmBrB,EAASsB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UAKE,6BAAKuB,IACL,cAAC,EAAD,CACEV,YAAY,kBACZC,aAAegB,KAAKhB,eAGtB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA9CVI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fbb9a2dd.chunk.js","sourcesContent":["import React from 'react'\n// import '../card-list/card-list.styles.css';\nimport './card.styles.css';\n\nexport const Card = props => {\n    return <div className='card-container'>\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2>{props.monster.name}</h2>        \n        <p>{props.monster.email}</p>        \n    </div>\n}","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component'\n\nexport const CardList = props => {\n    console.log(props);\n    \n    return <div className='card-list'>\n        {   \n            props.monsters.map(monster => (\n               <Card key={monster.id} monster={monster}/>\n            ))\n        }\n     </div>\n    \n}","import React from 'react';\nimport './search-box.styles.css'\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return <input \n        className='search' \n        type='search' \n        placeholder={placeholder} \n        onChange={handleChange}/>\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';  \n\nimport { CardList } from \"./components/card-list/card-list.component\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField:'',\n      title:''\n    };\n\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }))\n  }\n\n  // handleChange (e) {\n  //   this.setState({ searchField: e.target.value });\n  // }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n    this.setState({ title: e.target.value });\n  }\n\n  render(){\n    const { monsters, searchField, title } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        {\n        \n        /* <input type='search' placeholder='search monsters' onChange={ e => this.setState({ searchField: e.target.value }) }/> */}\n\n        <h1>{title}</h1>\n        <SearchBox \n          placeholder='search monsters' \n          handleChange={ this.handleChange }\n        />\n\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}